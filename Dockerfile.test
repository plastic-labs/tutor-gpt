# https://pythonspeed.com/articles/base-image-python-docker-images/
# https://testdriven.io/blog/docker-best-practices/
FROM python:3.10-slim-bullseye

WORKDIR /app

# https://stackoverflow.com/questions/53835198/integrating-python-poetry-with-docker
ENV PYTHONFAULTHANDLER=1 \
  PYTHONUNBUFFERED=1 \
  PYTHONHASHSEED=random \
  PIP_NO_CACHE_DIR=off \
  PIP_DISABLE_PIP_VERSION_CHECK=on \
  PIP_DEFAULT_TIMEOUT=100 \
  POETRY_VERSION=1.4.1

RUN pip install "poetry==$POETRY_VERSION"
RUN pip install streamlit
RUN pip install pytest

RUN apt-get update && apt-get install -y ca-certificates


# Copy only requirements to cache them in docker layer
WORKDIR /app
COPY poetry.lock pyproject.toml /app/

# Project initialization:
RUN poetry config virtualenvs.create false \
  && poetry install --no-root --no-interaction --no-ansi --without dev

WORKDIR /app

# RUN addgroup --system app && adduser --system --group app
# USER app

COPY .env .env
COPY agent/ agent/
COPY common/ common/
COPY bot/ bot/
COPY api/ api/
COPY tests/ tests/
# COPY pytest.ini pytest.ini

CMD ["poetry", "run", "pytest"]
